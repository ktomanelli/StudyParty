{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Allen Cooper\\\\Documents\\\\Coding\\\\StudyParty\\\\src\\\\Providers\\\\UserProvider.jsx\";\nimport React, { Component, createContext } from 'react';\nimport { auth } from '../firebase';\nexport const UserContext = createContext({\n  user: null\n});\n\nclass UserProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: null,\n      isDisplayName: false\n    };\n\n    this.updateIsDisplayName = () => {\n      this.setState({\n        isDisplayName: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    auth.onAuthStateChanged(userAuth => {\n      console.log(userAuth);\n      this.setState({\n        user: userAuth\n      });\n    });\n  }\n\n  // componentDidMount = async () => {\n  //   auth.onAuthStateChanged(async userAuth => {\n  //     const user = await generateUserDocument(userAuth);\n  //     this.setState({ user }, \n  //       () => console.log(user));\n  //   });\n  // };\n  render() {\n    return /*#__PURE__*/React.createElement(UserContext.Provider, {\n      value: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nexport default UserProvider;","map":{"version":3,"sources":["C:/Users/Allen Cooper/Documents/Coding/StudyParty/src/Providers/UserProvider.jsx"],"names":["React","Component","createContext","auth","UserContext","user","UserProvider","state","isDisplayName","updateIsDisplayName","setState","componentDidMount","onAuthStateChanged","userAuth","console","log","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,QAAgD,OAAhD;AACA,SAASC,IAAT,QAAqB,aAArB;AAEA,OAAO,MAAMC,WAAW,GAAGF,aAAa,CAAC;AAAEG,EAAAA,IAAI,EAAE;AAAR,CAAD,CAAjC;;AAEP,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEnCM,KAFmC,GAE3B;AACNF,MAAAA,IAAI,EAAE,IADA;AAENG,MAAAA,aAAa,EAAE;AAFT,KAF2B;;AAAA,SAcnCC,mBAdmC,GAcb,MAAM;AAC1B,WAAKC,QAAL,CAAc;AACZF,QAAAA,aAAa,EAAE;AADH,OAAd;AAGD,KAlBkC;AAAA;;AAOnCG,EAAAA,iBAAiB,GAAG;AAClBR,IAAAA,IAAI,CAACS,kBAAL,CAAwBC,QAAQ,IAAI;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAKH,QAAL,CAAc;AAAEL,QAAAA,IAAI,EAAEQ;AAAR,OAAd;AACD,KAHD;AAID;;AAQD;AACA;AACA;AACA;AACA;AACA;AACA;AAEAG,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE,KAAKT,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKU,KAAL,CAAWC,QADd,CADF;AAKD;;AAlCkC;;AAqCrC,eAAeZ,YAAf","sourcesContent":["import React, { Component, createContext } from 'react';\r\nimport { auth } from '../firebase';\r\n\r\nexport const UserContext = createContext({ user: null })\r\n\r\nclass UserProvider extends Component {\r\n\r\n  state = {\r\n    user: null,\r\n    isDisplayName: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    auth.onAuthStateChanged(userAuth => {\r\n      console.log(userAuth)\r\n      this.setState({ user: userAuth })\r\n    })\r\n  }\r\n\r\n  updateIsDisplayName = () => {\r\n    this.setState({\r\n      isDisplayName: true,\r\n    })\r\n  } \r\n\r\n  // componentDidMount = async () => {\r\n  //   auth.onAuthStateChanged(async userAuth => {\r\n  //     const user = await generateUserDocument(userAuth);\r\n  //     this.setState({ user }, \r\n  //       () => console.log(user));\r\n  //   });\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <UserContext.Provider value={this.state}>\r\n        {this.props.children}\r\n      </UserContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserProvider;"]},"metadata":{},"sourceType":"module"}