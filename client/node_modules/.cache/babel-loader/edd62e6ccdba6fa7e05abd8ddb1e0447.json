{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Allen Cooper\\\\Documents\\\\Coding\\\\StudyParty\\\\src\\\\Pages\\\\SignIn\\\\SignIn.js\";\nimport React, { Component } from 'react';\nimport { Container, Jumbotron, Form, Button } from 'react-bootstrap';\nimport NavigationBar from '../../Components/NavigationBar/NavigationBar';\nimport './SignIn.css';\nimport { Link } from 'react-router-dom';\nimport { signInWithGoogle } from '../../firebase';\n\nclass SignIn extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      error: null,\n      typed: \"\"\n    };\n\n    this.signInWithEmailAndPasswordHandler = (event, email, password) => {\n      event.preventDefault();\n      this.setState({\n        email: \"\",\n        password: \"\"\n      });\n    };\n\n    this.onChangeHandler = event => {\n      const {\n        name,\n        value\n      } = event.currentTarget;\n\n      if (name === 'userEmail') {\n        this.setState({\n          email: value\n        });\n      } else if (name === 'userPassword') {\n        this.setState({\n          password: value\n        });\n      }\n    };\n  }\n\n  // when component mounts, will run typewriter effect on subtitle after 1.5s\n  componentDidMount() {\n    const subtitleStr = 'Hey! You want to umm... study???';\n    setTimeout(() => this.typeWriter(subtitleStr), 1500);\n  }\n\n  // function that will take add a letter from a given string to 'typed' string stored in state every 50 milliseconds\n  typeWriter(slicedStr) {\n    if (slicedStr.length !== 0) {\n      this.setState(state => ({\n        typed: state.typed.concat(slicedStr[0])\n      }));\n      setTimeout(() => this.typeWriter(slicedStr.slice(1)), 50);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavigationBar, {\n      changeLoggedIn: this.props.changeLoggedIn,\n      loggedIn: this.props.loggedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      style: {\n        backgroundColor: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      style: {\n        backgroundColor: 'white',\n        marginBottom: '0px',\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"main-title permanent-marker pink animate__animated animate__bounceInDown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"StudyParty!\"), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"montserrat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, this.state.typed, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"cursor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontWeight: \"normal\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, \"|\")))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        maxWidth: \"600px\",\n        margin: \"0 auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"userEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Enter email\",\n      name: \"userEmail\",\n      value: this.state.email,\n      onChange: event => this.onChangeHandler(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Password\",\n      name: \"userPassword\",\n      value: this.state.password,\n      onChange: event => this.onChangeHandler(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      block: true,\n      onClick: event => {\n        this.signInWithEmailAndPasswordHandler(event, this.state.email, this.state.password);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '40px 0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"ride-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ride-line-span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 42\n      }\n    }, \"or\")), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-primary\",\n      block: true,\n      onClick: signInWithGoogle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, \"Sign in with Google\"))), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        paddingBottom: '100px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, \"Don't have an account? Sign up \", /*#__PURE__*/React.createElement(Link, {\n      to: \"signUp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 46\n      }\n    }, \"here\")))));\n  }\n\n}\n\nexport default SignIn;","map":{"version":3,"sources":["C:/Users/Allen Cooper/Documents/Coding/StudyParty/src/Pages/SignIn/SignIn.js"],"names":["React","Component","Container","Jumbotron","Form","Button","NavigationBar","Link","signInWithGoogle","SignIn","state","email","password","error","typed","signInWithEmailAndPasswordHandler","event","preventDefault","setState","onChangeHandler","name","value","currentTarget","componentDidMount","subtitleStr","setTimeout","typeWriter","slicedStr","length","concat","slice","render","props","changeLoggedIn","loggedIn","backgroundColor","marginBottom","textAlign","fontWeight","maxWidth","margin","paddingBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Jumbotron, Form, Button } from 'react-bootstrap';\r\nimport NavigationBar from '../../Components/NavigationBar/NavigationBar';\r\nimport './SignIn.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { signInWithGoogle } from '../../firebase';\r\n\r\nclass SignIn extends Component {\r\n\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    error: null,\r\n    typed: \"\",\r\n  }\r\n\r\n  // when component mounts, will run typewriter effect on subtitle after 1.5s\r\n  componentDidMount() {\r\n    const subtitleStr = 'Hey! You want to umm... study???'\r\n    setTimeout(()=> this.typeWriter(subtitleStr), 1500)\r\n  }\r\n\r\n  signInWithEmailAndPasswordHandler = (event, email, password) => {\r\n    event.preventDefault()\r\n    this.setState({\r\n      email: \"\",\r\n      password: \"\",\r\n    })\r\n  }\r\n\r\n  //function to handle form change\r\n  onChangeHandler = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    if (name === 'userEmail') {\r\n      this.setState({\r\n        email: value\r\n      })\r\n    } else if (name === 'userPassword') {\r\n      this.setState({\r\n        password: value\r\n      })\r\n    }\r\n  }\r\n\r\n  // function that will take add a letter from a given string to 'typed' string stored in state every 50 milliseconds\r\n  typeWriter(slicedStr) {\r\n    if (slicedStr.length !== 0) {\r\n      this.setState((state) => ({\r\n        typed: state.typed.concat(slicedStr[0])\r\n      }));\r\n      setTimeout(() => this.typeWriter(slicedStr.slice(1)), 50);\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n\r\n        <NavigationBar changeLoggedIn={this.props.changeLoggedIn} loggedIn={this.props.loggedIn} />\r\n\r\n        <Container style={{ backgroundColor: 'white' }}>\r\n\r\n          <Jumbotron style={{ backgroundColor: 'white', marginBottom: '0px', textAlign: \"center\" }}>\r\n            <h1 className=\"main-title permanent-marker pink animate__animated animate__bounceInDown\">StudyParty!</h1>\r\n            <h6 className=\"montserrat\">\r\n              {this.state.typed}\r\n              <span className=\"cursor\">\r\n                <span style={{ fontWeight: \"normal\" }}>|</span>\r\n              </span>\r\n            </h6>\r\n          </Jumbotron>\r\n\r\n          <div style={{ maxWidth: \"600px\", margin: \"0 auto\" }}>\r\n            <Form>\r\n\r\n              <Form.Group controlId=\"userEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"userEmail\" value={this.state.email} onChange={(event) => this.onChangeHandler(event)} />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" name=\"userPassword\" value={this.state.password} onChange={(event) => this.onChangeHandler(event)} />\r\n              </Form.Group>\r\n\r\n              <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              block\r\n              onClick={event => {\r\n                this.signInWithEmailAndPasswordHandler(event, this.state.email, this.state.password);\r\n              }}\r\n              >\r\n                Sign In\r\n              </Button>\r\n\r\n              <div style={{ margin: '40px 0px' }}>\r\n                <p className=\"ride-line\"><span className=\"ride-line-span\">or</span></p>\r\n                <Button variant=\"outline-primary\" block onClick={signInWithGoogle}>\r\n                  Sign in with Google\r\n                </Button>\r\n              </div>\r\n\r\n            </Form>\r\n\r\n            <p style={{ paddingBottom: '100px' }}>\r\n              Don't have an account? Sign up <Link to='signUp'>here</Link>\r\n            </p>\r\n\r\n          </div>\r\n\r\n        </Container>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}