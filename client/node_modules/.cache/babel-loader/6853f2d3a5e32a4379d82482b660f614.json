{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCLuloPcn-et2C4WJqj6uf03HGcpcYF3m8\",\n  authDomain: \"studyparty-97e3d.firebaseapp.com\",\n  databaseURL: \"https://studyparty-97e3d.firebaseio.com\",\n  projectId: \"studyparty-97e3d\",\n  storageBucket: \"studyparty-97e3d.appspot.com\",\n  messagingSenderId: \"320626247759\",\n  appId: \"1:320626247759:web:136b65025be5f241aa823a\",\n  measurementId: \"G-F3RVYS6305\"\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig); // firebase.analytics();\n\nfirebase.firestore().enablePersistence(); // get references to Cloud Firestore and Authentication service, and export them\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(provider);\n}; // export const generateUserDocument = async (user, additionalData) => {\n//   if (!user) return;\n//   const userRef = firestore.doc(`users/${user.uid}`);\n//   const snapshot = await userRef.get();\n//   if (!snapshot.exists) {\n//     const { email, displayName } = user;\n//     try {\n//       await userRef.set({\n//         displayName,\n//         email,\n//         ...additionalData\n//       });\n//     } catch (error) {\n//       console.error(\"Error creating user document\", error);\n//     }\n//   }\n//   return getUserDocument(user.uid);\n// };\n// const getUserDocument = async uid => {\n//   if (!uid) return null;\n//   try {\n//     const userDocument = await firestore.doc(`users/${uid}`).get();\n//     return {\n//       uid,\n//       ...userDocument.data()\n//     };\n//   } catch (error) {\n//     console.error(\"Error fetching user\", error);\n//   }\n// };","map":{"version":3,"sources":["C:/Users/Allen Cooper/Documents/Coding/StudyParty/src/firebase.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","firestore","enablePersistence","auth","provider","GoogleAuthProvider","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,kCAFS;AAGrBC,EAAAA,WAAW,EAAE,yCAHQ;AAIrBC,EAAAA,SAAS,EAAE,kBAJU;AAKrBC,EAAAA,aAAa,EAAE,8BALM;AAMrBC,EAAAA,iBAAiB,EAAE,cANE;AAOrBC,EAAAA,KAAK,EAAE,2CAPc;AAQrBC,EAAAA,aAAa,EAAE;AARM,CAAvB,C,CAWA;;AACAT,QAAQ,CAACU,aAAT,CAAuBT,cAAvB,E,CACA;;AAEAD,QAAQ,CAACW,SAAT,GAAqBC,iBAArB,G,CAGA;;AACA,OAAO,MAAMC,IAAI,GAAGb,QAAQ,CAACa,IAAT,EAAb;AACP,OAAO,MAAMF,SAAS,GAAGX,QAAQ,CAACW,SAAT,EAAlB;AAEP,MAAMG,QAAQ,GAAG,IAAId,QAAQ,CAACa,IAAT,CAAcE,kBAAlB,EAAjB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AACpCH,EAAAA,IAAI,CAACI,eAAL,CAAqBH,QAArB;AACD,CAFM,C,CAIP;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCLuloPcn-et2C4WJqj6uf03HGcpcYF3m8\",\r\n  authDomain: \"studyparty-97e3d.firebaseapp.com\",\r\n  databaseURL: \"https://studyparty-97e3d.firebaseio.com\",\r\n  projectId: \"studyparty-97e3d\",\r\n  storageBucket: \"studyparty-97e3d.appspot.com\",\r\n  messagingSenderId: \"320626247759\",\r\n  appId: \"1:320626247759:web:136b65025be5f241aa823a\",\r\n  measurementId: \"G-F3RVYS6305\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.analytics();\r\n\r\nfirebase.firestore().enablePersistence();\r\n\r\n\r\n// get references to Cloud Firestore and Authentication service, and export them\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport const signInWithGoogle = () => {\r\n  auth.signInWithPopup(provider);\r\n};\r\n\r\n// export const generateUserDocument = async (user, additionalData) => {\r\n//   if (!user) return;\r\n\r\n//   const userRef = firestore.doc(`users/${user.uid}`);\r\n//   const snapshot = await userRef.get();\r\n\r\n//   if (!snapshot.exists) {\r\n//     const { email, displayName } = user;\r\n//     try {\r\n//       await userRef.set({\r\n//         displayName,\r\n//         email,\r\n//         ...additionalData\r\n//       });\r\n//     } catch (error) {\r\n//       console.error(\"Error creating user document\", error);\r\n//     }\r\n//   }\r\n//   return getUserDocument(user.uid);\r\n// };\r\n\r\n// const getUserDocument = async uid => {\r\n//   if (!uid) return null;\r\n//   try {\r\n//     const userDocument = await firestore.doc(`users/${uid}`).get();\r\n//     return {\r\n//       uid,\r\n//       ...userDocument.data()\r\n//     };\r\n//   } catch (error) {\r\n//     console.error(\"Error fetching user\", error);\r\n//   }\r\n// };"]},"metadata":{},"sourceType":"module"}